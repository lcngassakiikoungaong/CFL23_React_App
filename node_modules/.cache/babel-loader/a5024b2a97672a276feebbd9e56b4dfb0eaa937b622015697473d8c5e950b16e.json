{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\n\n/* Progress Bar Animation */\nfunction AnimateBar(_ref) {\n  _s();\n  let {\n    i_sum,\n    l_sum,\n    g_sum,\n    gr_sum,\n    o_sum\n  } = _ref;\n  let circularProgressRef = useRef(null);\n  let progressValueRef = useRef(null);\n  let [marginCount, setMarginCount] = useState(0);\n  let [progressStart, setProgressStart] = useState(0);\n  let [fontSize, setFontSize] = useState(40);\n  useEffect(() => {\n    let marginValue = i_sum - l_sum - g_sum - gr_sum - o_sum;\n    let tmp = marginValue.toString().length;\n    if (tmp < 6) {\n      setFontSize(40);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 6 && tmp < 8) {\n      setFontSize(35);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 8 && tmp < 10) {\n      setFontSize(30);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 10) {\n      setFontSize(20);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    }\n    let progressEnd = marginValue / i_sum * 100;\n    let speed = 20;\n    if (100 - progressEnd < 1 && 100 - progressEnd > 0) {\n      progressEnd = 99;\n    }\n    let count = marginValue - Math.trunc(progressEnd);\n    setMarginCount(count);\n    if (marginValue <= 0) {\n      setProgressStart(0);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.textContent = \"$\" + marginValue.toLocaleString(\"en-US\"));\n      (circularProgressRef === null || circularProgressRef === void 0 ? void 0 : circularProgressRef.current) && (circularProgressRef.current.style.background = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\n    } else {\n      let progress = setInterval(() => {\n        setProgressStart(prev => prev + 1);\n        setMarginCount(prev => prev + 1);\n        if (marginCount >= marginValue) {\n          setMarginCount(marginValue);\n        }\n        (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.textContent = \"$\" + count.toLocaleString(\"en-US\"));\n        (circularProgressRef === null || circularProgressRef === void 0 ? void 0 : circularProgressRef.current) && (circularProgressRef.current.stylebackground = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\n        if (progressStart >= progressEnd) {\n          clearInterval(progress);\n        }\n      }, speed);\n      return () => clearInterval(progress);\n    }\n  }, [i_sum, l_sum, g_sum, gr_sum, o_sum, fontSize, progressStart, marginCount]);\n  return {\n    marginCount,\n    progressStart,\n    fontSize\n  };\n}\n_s(AnimateBar, \"TrEEoA8j8YAjH3I62g4SbCjqkKc=\");\n_c = AnimateBar;\nexport default AnimateBar;\nvar _c;\n$RefreshReg$(_c, \"AnimateBar\");","map":{"version":3,"names":["useState","useEffect","useRef","AnimateBar","_ref","_s","i_sum","l_sum","g_sum","gr_sum","o_sum","circularProgressRef","progressValueRef","marginCount","setMarginCount","progressStart","setProgressStart","fontSize","setFontSize","marginValue","tmp","toString","length","current","style","progressEnd","speed","count","Math","trunc","textContent","toLocaleString","background","progress","setInterval","prev","stylebackground","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/Andres Choque/Documents/React_App_Fork/src/components/animatebar.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\n/* Progress Bar Animation */\r\nfunction AnimateBar({ i_sum, l_sum, g_sum, gr_sum, o_sum }) {\r\n    let circularProgressRef = useRef(null);\r\n    let progressValueRef = useRef(null);\r\n    let [marginCount, setMarginCount] = useState(0);\r\n    let [progressStart, setProgressStart] = useState(0);\r\n    let [fontSize, setFontSize] = useState(40);\r\n  \r\n    useEffect(() => {\r\n        let marginValue = i_sum - l_sum - g_sum - gr_sum - o_sum;\r\n  \r\n        let tmp = marginValue.toString().length;\r\n        if (tmp < 6) {\r\n            setFontSize(40);\r\n            progressValueRef?.current && (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n        } else if (tmp >= 6 && tmp < 8) {\r\n            setFontSize(35);\r\n            progressValueRef?.current && (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n        } else if (tmp >= 8 && tmp < 10) {\r\n            setFontSize(30);\r\n            progressValueRef?.current && (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n        } else if (tmp >= 10) {\r\n            setFontSize(20);\r\n            progressValueRef?.current && (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n        }\r\n  \r\n        let progressEnd = (marginValue / i_sum) * 100;\r\n        let speed = 20;\r\n  \r\n        if (100 - progressEnd < 1 && 100 - progressEnd > 0) {\r\n            progressEnd = 99;\r\n        }\r\n  \r\n        let count = marginValue - Math.trunc(progressEnd);\r\n        setMarginCount(count);\r\n        if (marginValue <= 0) {\r\n            setProgressStart(0);\r\n            progressValueRef?.current && (progressValueRef.current.style.textContent = \"$\" + marginValue.toLocaleString(\"en-US\"));\r\n            circularProgressRef?.current && (circularProgressRef.current.style.background = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\r\n        } else {\r\n            let progress = setInterval(() => {\r\n                setProgressStart(prev => prev + 1);\r\n                setMarginCount(prev => prev + 1);\r\n  \r\n                if (marginCount >= marginValue) {\r\n                    setMarginCount(marginValue);\r\n                }\r\n  \r\n                progressValueRef?.current && (progressValueRef.current.textContent = \"$\" + count.toLocaleString(\"en-US\"));\r\n                circularProgressRef?.current && (circularProgressRef.current.stylebackground = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\r\n  \r\n                if (progressStart >= progressEnd) {\r\n                    clearInterval(progress);\r\n                }\r\n            }, speed);\r\n  \r\n            return () => clearInterval(progress);\r\n        }\r\n    }, [i_sum, l_sum, g_sum, gr_sum, o_sum, fontSize, progressStart, marginCount]);\r\n\r\n    return {\r\n        marginCount,\r\n        progressStart,\r\n        fontSize,\r\n    };\r\n}\r\n\r\nexport default AnimateBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}