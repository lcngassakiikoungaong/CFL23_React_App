{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nohan\\\\CFL23_React_App\\\\src\\\\components\\\\animatebar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimateBar = _ref => {\n  _s();\n  let {\n    i_sum,\n    l_sum,\n    g_sum,\n    gr_sum,\n    o_sum\n  } = _ref;\n  let circularProgressRef = useRef(null);\n  let progressValueRef = useRef(null);\n  let [marginCount, setMarginCount] = useState(0);\n  let [progressStart, setProgressStart] = useState(0);\n  let [fontSize, setFontSize] = useState(40);\n  useEffect(() => {\n    let marginValue = i_sum - l_sum - g_sum - gr_sum - o_sum;\n    let tmp = marginValue.toString().length;\n    if (tmp < 6) {\n      setFontSize(40);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 6 && tmp < 8) {\n      setFontSize(35);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 8 && tmp < 10) {\n      setFontSize(30);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    } else if (tmp >= 10) {\n      setFontSize(20);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.fontSize = `${fontSize}px`);\n    }\n    let progressEnd = marginValue / i_sum * 100;\n    let speed = 20;\n    if (100 - progressEnd < 1 && 100 - progressEnd > 0) {\n      progressEnd = 99;\n    }\n    let count = marginValue - Math.trunc(progressEnd);\n    setMarginCount(count);\n    if (marginValue <= 0) {\n      setProgressStart(0);\n      (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.style.textContent = \"$\" + marginValue.toLocaleString(\"en-US\"));\n      (circularProgressRef === null || circularProgressRef === void 0 ? void 0 : circularProgressRef.current) && (circularProgressRef.current.style.background = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\n    } else {\n      let progress = setInterval(() => {\n        setProgressStart(prev => prev + 1);\n        setMarginCount(prev => prev + 1);\n        if (marginCount >= marginValue) {\n          setMarginCount(marginValue);\n        }\n        (progressValueRef === null || progressValueRef === void 0 ? void 0 : progressValueRef.current) && (progressValueRef.current.textContent = \"$\" + count.toLocaleString(\"en-US\"));\n        (circularProgressRef === null || circularProgressRef === void 0 ? void 0 : circularProgressRef.current) && (circularProgressRef.current.stylebackground = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\n        if (progressStart >= progressEnd) {\n          clearInterval(progress);\n        }\n      }, speed);\n      return () => clearInterval(progress);\n    }\n  }, [fontSize, g_sum, gr_sum, i_sum, l_sum, marginCount, o_sum, progressStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [marginCount, progressStart, fontSize]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimateBar, \"TrEEoA8j8YAjH3I62g4SbCjqkKc=\");\n_c = AnimateBar;\nexport default AnimateBar;\nvar _c;\n$RefreshReg$(_c, \"AnimateBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AnimateBar","_ref","_s","i_sum","l_sum","g_sum","gr_sum","o_sum","circularProgressRef","progressValueRef","marginCount","setMarginCount","progressStart","setProgressStart","fontSize","setFontSize","marginValue","tmp","toString","length","current","style","progressEnd","speed","count","Math","trunc","textContent","toLocaleString","background","progress","setInterval","prev","stylebackground","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nohan/CFL23_React_App/src/components/animatebar.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst AnimateBar = ({ i_sum, l_sum, g_sum, gr_sum, o_sum }) => {\r\n  let circularProgressRef = useRef(null);\r\n  let progressValueRef = useRef(null);\r\n  let [marginCount, setMarginCount] = useState(0);\r\n  let [progressStart, setProgressStart] = useState(0);\r\n  let [fontSize, setFontSize] = useState(40);\r\n\r\n  useEffect(() => {\r\n    let marginValue = i_sum - l_sum - g_sum - gr_sum - o_sum;\r\n\r\n    let tmp = marginValue.toString().length;\r\n    if (tmp < 6) {\r\n      setFontSize(40);\r\n      progressValueRef?.current &&\r\n        (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n    } else if (tmp >= 6 && tmp < 8) {\r\n      setFontSize(35);\r\n      progressValueRef?.current &&\r\n        (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n    } else if (tmp >= 8 && tmp < 10) {\r\n      setFontSize(30);\r\n      progressValueRef?.current &&\r\n        (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n    } else if (tmp >= 10) {\r\n      setFontSize(20);\r\n      progressValueRef?.current &&\r\n        (progressValueRef.current.style.fontSize = `${fontSize}px`);\r\n    }\r\n\r\n    let progressEnd = (marginValue / i_sum) * 100;\r\n    let speed = 20;\r\n\r\n    if (100 - progressEnd < 1 && 100 - progressEnd > 0) {\r\n      progressEnd = 99;\r\n    }\r\n\r\n    let count = marginValue - Math.trunc(progressEnd);\r\n    setMarginCount(count);\r\n    if (marginValue <= 0) {\r\n      setProgressStart(0);\r\n      progressValueRef?.current &&\r\n        (progressValueRef.current.style.textContent = \"$\" +\r\n          marginValue.toLocaleString(\"en-US\"));\r\n      circularProgressRef?.current &&\r\n        (circularProgressRef.current.style.background = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\r\n    } else {\r\n      let progress = setInterval(() => {\r\n        setProgressStart((prev) => prev + 1);\r\n        setMarginCount((prev) => prev + 1);\r\n\r\n        if (marginCount >= marginValue) {\r\n          setMarginCount(marginValue);\r\n        }\r\n\r\n        progressValueRef?.current &&\r\n          (progressValueRef.current.textContent = \"$\" +\r\n            count.toLocaleString(\"en-US\"));\r\n        circularProgressRef?.current &&\r\n          (circularProgressRef.current.stylebackground = `conic-gradient(darkgoldenrod ${progressStart * 3.6}deg, #ededed 0deg)`);\r\n\r\n        if (progressStart >= progressEnd) {\r\n          clearInterval(progress);\r\n        }\r\n      }, speed);\r\n\r\n      return () => clearInterval(progress);\r\n    }\r\n  }, [    fontSize,    g_sum,    gr_sum,    i_sum,    l_sum,    marginCount,    o_sum,    progressStart,  ]);\r\n\r\n  return (\r\n    <div>\r\n      {marginCount}\r\n      {progressStart}\r\n      {fontSize}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimateBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}